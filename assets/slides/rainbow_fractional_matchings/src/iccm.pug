include ../../layouts/title_slide.pug
section
  section
    img.simple.fade-in(src="img/rainbow.png" height="100px")
    h3 Rainbow phenomena
  section
    .flex-container
      .flex-1
        table.latin
          tr
            td.fragment.grow(data-fragment-index='1') 1
            td.fragment.shrink(data-fragment-index='1') 3
            td.fragment.shrink(data-fragment-index='1') 2
          tr
            td.fragment.shrink(data-fragment-index='1') 2
            td.fragment.shrink(data-fragment-index='1') 1
            td.fragment.grow(data-fragment-index='1') 3
          tr
            td.fragment.shrink(data-fragment-index='1') 3
            td.fragment.grow(data-fragment-index='1') 2
            td.fragment.shrink(data-fragment-index='1') 1
        span
          small Transversal in Latin square
      .flex-2
        .theorem.fragment
          p Ryser's conjecture
          p
            | Every Latin square of 
            span.fragment.highlight-red odd order 
            | has one transversal.
    .flex-container
      .flex-1
        svg(height='180' width='100').latin-graph.fragment
          line(x1='10' y1='10' x2='90' y2='10' stroke='#db3236' stroke-width='4')
          line(x1='10' y1='90' x2='90' y2='90' stroke='#db3236' stroke-width='4')
          line(x1='10' y1='170' x2='90' y2='170' stroke='#db3236' stroke-width='4')
          line(x1='10' y1='10' x2='90' y2='170' stroke='#f4c20d' stroke-width='4')
          line(x1='10' y1='90' x2='90' y2='10' stroke='#f4c20d' stroke-width='4')
          line(x1='10' y1='170' x2='90' y2='90' stroke='#f4c20d' stroke-width='4')
          line(x1='10' y1='10' x2='90' y2='90' stroke='#4885ed' stroke-width='4')
          line(x1='10' y1='90' x2='90' y2='170' stroke='#4885ed' stroke-width='4')
          line(x1='10' y1='170' x2='90' y2='10' stroke='#4885ed' stroke-width='4')
          circle(cx='10' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='90' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='10' cy='90' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='90' cy='90' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='10' cy='170' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='90' cy='170' r='4' stroke='grey' stroke-width='2' fill='white')
      .flex-2
        .theorem.fragment
          p Rainbow reformulation
          p
            | If an $n$ by $n$ (odd) complete bipartite graph is decomposed into $n$ perfect mathings, then there exists a 
            span.red rainbow 
            | perfect matching.
  section
    .flex-container
      .flex-1
        svg(viewBox="-20 -20 350 240" style='margin-bottom: 2.5rem')
          defs
            marker(id='arrow' markerWidth='5' markerHeight='3' refX="5" refY="1.2" orient="auto")
              polygon(points="0 0, 5 1.2, 0 2.4")
          line(x1="50" y1="10" x2="170" y2="10" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="50" y1="10" x2="230" y2="110" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="170" y1="10" x2="-10" y2="110" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="170" y1="10" x2="50" y2="210" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="230" y1="110" x2="-10" y2="110" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="230" y1="110" x2="170" y2="210" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="170" y1="210" x2="170" y2="10" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="170" y1="210" x2="50" y2="210" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="50" y1="210" x2="50" y2="10" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="50" y1="210" x2="230" y2="110" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="-10" y1="110" x2="50" y2="10" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          line(x1="-10" y1="110" x2="50" y2="210" stroke="black" stroke-width="4" marker-end='url(#arrow)')
          circle(cx='50' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='170' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-10' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='230' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='50' cy='210' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='170' cy='210' r='4' stroke='grey' stroke-width='2' fill='white')
      .flex-2
        .theorem.eighty
          p Caccetta–Häggkvist conjecture
          p Every digraph on $n$ vertices with minimum out-degree $\ge n / r$ has a directed cycle of length $\le r$.
    .flex-container
      .flex-1.fragment
        svg(viewBox="-20 -20 350 240" style='margin-top: 2rem')
          line(x1="50" y1="10" x2="170" y2="10" stroke="#db3236" stroke-width="4")
          line(x1="50" y1="10" x2="230" y2="110" stroke="#db3236" stroke-width="4")
          line(x1="170" y1="10" x2="-10" y2="110" stroke="#f4c20d" stroke-width="4")
          line(x1="170" y1="10" x2="50" y2="210" stroke="#f4c20d" stroke-width="4")
          line(x1="230" y1="110" x2="-10" y2="110" stroke="#4885ed" stroke-width="4")
          line(x1="230" y1="110" x2="170" y2="210" stroke="#4885ed" stroke-width="4")
          line(x1="170" y1="210" x2="170" y2="10" stroke="#3cba54" stroke-width="4")
          line(x1="170" y1="210" x2="50" y2="210" stroke="#3cba54" stroke-width="4")
          line(x1="50" y1="210" x2="50" y2="10" stroke="#aa00ff" stroke-width="4")
          line(x1="50" y1="210" x2="230" y2="110" stroke="#aa00ff" stroke-width="4")
          line(x1="-10" y1="110" x2="50" y2="10" stroke="gray" stroke-width="4")
          line(x1="-10" y1="110" x2="50" y2="210" stroke="gray" stroke-width="4")
          circle(cx='50' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='170' cy='10' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-10' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='230' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='50' cy='210' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='170' cy='210' r='4' stroke='grey' stroke-width='2' fill='white')
      .flex-2.fragment
        .theorem.eighty
          p Rainbow generalization
          p
            | Let $G$ be an edge-colored graph on $n$ vertices.
            | If there are $n$ color classes, each of size $\ge n/r$,
            | then $G$ has a rainbow cycle of length $\le r$.
  section
    h3 Common theme
    p
      | Given edge sets $E_1, \dots, E_m$, find a rainbow set $E$ consists of at most $1$ edge from each $E_i$.
    .fragment
      h3 Rainbow matching
      p
        | Given macthings $E_1, \dots, E_m$,
        br
        | a rainbow matching $E$ is a matching and a rainbow set
  section
    .flex-container
      .flex-1
        img.avatar(src="img/pokrovskiy.jpg" style="margin-top: 1.2rem")
      .flex-2
        p.left-aligned
          span.blue Pokrovskiy: 
          span.red $n$ 
          | matchings of size 
          span.red $n+o(n)$ 
          | in a bipartite graph have a rainbow matching of size 
          span.red $n$
          | .
    .flex-container.fragment
      .flex-1
        img.avatar(src="img/woolbright.jpg" style="margin-top: 1.2rem")
      .flex-2
        p.left-aligned
          span.blue Woolbright: 
          span.red $n$ 
          | matchings of size 
          span.red $n$ 
          | in a bipartite graph have a rainbow matching of size 
          span.red $n - \sqrt{n}$
          | .
    p.fragment
      span.blue Question: 
      span.underline-block.red &nbsp;&nbsp;?&nbsp;&nbsp;
      |  matchings of size 
      span.red $n$ 
      | in a bipartite graph have a rainbow matching of size 
      span.red $n$
      | .
  section
    svg(viewBox="-120 -120 240 240" height="200")
      line(x1="110" y1="46" x2="110" y2="-46" stroke="#db3236" stroke-width="4")
      line(x1="-46" y1="110" x2="46" y2="110" stroke="#db3236" stroke-width="4")
      line(x1="-110" y1="46" x2="-110" y2="-46" stroke="#db3236" stroke-width="4")
      line(x1="-46" y1="-110" x2="46" y2="-110" stroke="#db3236" stroke-width="4")
      line(x1="110" y1="46" x2="46" y2="110" stroke="#4885ed" stroke-width="4")
      line(x1="-110" y1="-46" x2="-46" y2="-110" stroke="#4885ed" stroke-width="4")
      line(x1="110" y1="-46" x2="46" y2="-110" stroke="#4885ed" stroke-width="4")
      line(x1="-110" y1="46" x2="-46" y2="110" stroke="#4885ed" stroke-width="4")
      circle(cx='110' cy='46' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='-110' cy='46' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='110' cy='-46' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='-110' cy='-46' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='46' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='-46' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='46' cy='-110' r='4' stroke='grey' stroke-width='2' fill='white')
      circle(cx='-46' cy='-110' r='4' stroke='grey' stroke-width='2' fill='white')
    br
    small
      span.red $(n-1)$ x red matching of size $n$ 
      | + 
      span.blue $(n-1)$ x blue matching of size $n$
    p.left-aligned.fragment
      span.blue Answer: 
      span.underline-block.red $2n-1$
      |  matchings of size 
      span.red $n$ 
      | in a bipartite graph have a rainbow matching of size 
      span.red $n$
      | .
    .flex-container.fragment
      .flex-1
        img.avatar(src="img/drisko.jpg" style="margin-top: 1.2rem")
      .flex-2
        p.left-aligned
          span.blue Drisko: 
          | $2n-1$ perfect matchings of size $n$ in a bipartite graph have a rainbow perfect matching.
section
  section
    h3 Plan of talk
    p.fragment.grow Geometric proof of Drisko
    p Topological toolkit
    p Applications
  section
    .flex-container
      .flex-1
        svg(viewBox='0 0 200 200' height='300px')
          circle(cx='10' cy='10' r='4' stroke='#db3236' stroke-width='2' fill='#db3236')
          circle(cx='150' cy='60' r='4' stroke='#db3236' stroke-width='2' fill='#db3236')
          circle(cx='100' cy='140' r='4' stroke='#db3236' stroke-width='2' fill='#db3236')
          line(x1='10' y1='10' x2='150' y2='60' stroke='#db3236' stroke-width='4' opacity='0.5')
          line(x1='100' y1='140' x2='150' y2='60' stroke='#db3236' stroke-width='4' opacity='0.5')
          line(x1='100' y1='140' x2='10' y2='10' stroke='#db3236' stroke-width='4' opacity='0.5')
          circle(cx='50' cy='90' r='4' stroke='#3cba54' stroke-width='2' fill='#3cba54')
          circle(cx='150' cy='110' r='4' stroke='#3cba54' stroke-width='2' fill='#3cba54')
          line(x1='50' y1='90' x2='150' y2='110' stroke='#3cba54' stroke-width='4' opacity='0.5')
          circle(cx='160' cy='40' r='4' stroke='#4885ed' stroke-width='2' fill='#4885ed')
          circle(cx='40' cy='160' r='4' stroke='#4885ed' stroke-width='2' fill='#4885ed')
          line(x1='160' y1='40' x2='40' y2='160' stroke='#4885ed' stroke-width='4' opacity='0.5')
          circle(cx='100' cy='100' r='4' stroke='grey' stroke-width='2' fill='grey')
      .flex-2
        .theorem(style='margin-bottom: 1rem')
          p Bárány's Colorful Carathéodory
          p If $x \in \mathbb{R}^d$ lies in $\mathrm{conv}(P_k)$ for $k=1,2, \dots, d+1$ then $x$ lies in the convex hull of a rainbow set.
        .theorem.fragment
          p Cone version
          p If $x \in \mathbb{R}^d$ lies in $\mathrm{pos}(P_k)$ for $k=1,2,\dots,d$ then $x$ lies in the positive cone of a rainbow set.
  section
    p
      span.blue Drisko: 
      | $2n-1$ perfect matchings of size $n$ in a bipartite graph have a rainbow perfect matching.
    p
      span Standard basis of $\mathbb{R}^{2n}$: $u_1, \dots, u_n$, $v_1, \dots, v_n$
      br
      span.fragment(data-fragment-index="0") edge $u_i \sim v_j$ $\Leftrightarrow$ $u_i + v_j \in \mathbb{R}^{2n}$
      br
      span.fragment(data-fragment-index="1") edge set $E_k$ $\Leftrightarrow$ $P_k := \big\{u_i + v_j : u_i\sim v_j \text{ in }E_k\big\}$
      br
      span.fragment(data-fragment-index="2") $E_k$ is perfect matching 
      span.red.fragment(data-fragment-index="5") $\Leftarrow$
      span.fragment(data-fragment-index="3") $\Rightarrow$ $\vec{1} := \sum u_i + \sum v_i \in \mathrm{pos}(P_k)$
      br
      span.red.fragment(data-fragment-index="6") Fix: $P_k$ and $\vec{1}$ live in a 1-codimensional subspace of $\mathbb{R}^{2n}$
      br
      span.fragment(data-fragment-index="4") Bárány: $\vec{1}$ is in the cone of a rainbow set $x_1 \in P_1, \dots, x_{2n-1}\in P_{2n-1}$
      br
      span.red.fragment(data-fragment-index="5") $\Rightarrow$ 
      span.fragment(data-fragment-index="5") a rainbow perfect matching
  section
    figure(style="margin-bottom: 0.25rem")
      img.avatar(src="img/aharoni.png")
      img.avatar(src="img/berger.png")
    .theorem
      p Aharoni–Berger
      p $2n-1$ matchings of size $n$ in a bipartite graph have a rainbow matching of size $n$.
    p 
      | Standard basis of $\mathbb{R}^{?}$: $u_1, u_2, \dots$, $v_1, v_2, \dots$
      br
      span.red.fragment(data-fragment-index="0") No control on dimension of ambient space

section
  section
    h3 Plan of talk
    p Geometric proof of Drisko
    p.fragment.grow Topological toolkit
    p Applications
  section
    p
      span.blue Simplicial complex 
      | $\mathcal{C}$ is a family of sets such that $\sigma \subseteq \tau, \tau \in \mathcal{C} \implies \sigma\in \mathcal{C}$.
    p.fragment
      small $V = \{1,2,3,4\}$, $\mathcal{C} = \{\emptyset, \{1\}, \{2\}, \{3\}, \{4\}, \{1,2\}, \{1,3\}, \{2,3\}, \{1,2,3\}, \{3,4\}\}$
    img.simple.fragment(src="img/simplicial_complex_example.png" style='height:400px')
  section
    figure(style='margin-bottom: 0.25rem')
      img.avatar(src="img/kalai.png")
      img.avatar(src="img/meshulam.png")
    .theorem 
      p Kalai–Meshulam
      p Let $V_1, \dots, V_{d+1} \subset V$. If $\mathcal{C}$ is a $d$-Leray simplicial complex on $V$ and no $V_k$ is in $\mathcal{C}$, then a rainbow set is not in $\mathcal{C}$.
    p.fragment
      span.blue "Definition" 
      span $\mathcal{C}$ is $d$-Leray if $\mathcal{C}$ does not have "holes" of dimension $\ge d$.
  section
    .flex-container
      .theorem.flex-1.eighty(style="margin-right: 0.25rem")
        p Kalai–Meshulam
        p Let $V_1, \dots, V_{d+1} \subset V$. If $\mathcal{C}$ is a $d$-Leray simplicial complex on $V$ and no $V_k$ is in $\mathcal{C}$, then a rainbow set is not in $\mathcal{C}$.
      .theorem.flex-1.eighty(style="margin-left: 0.25rem")
        p Bárány
        p If $x \in \mathbb{R}^d$ lies in $\mathrm{conv}(P_k)$ for $k=1,2, \dots, d+1$ then $x$ lies in the convex hull of a rainbow set.
    p.ninety
      span.fragment
        span.blue Proof sketch 
        | (Kalai–Meshulam $\implies$ Bárány)
      br
      span.fragment Construct $\mathcal{C}$ on $V$ such that $x\in \mathrm{conv}(P) \Leftrightarrow P \not\in \mathcal{C}$
      br
      span.fragment Kalai–Meshulam: if $\mathcal{C}$ is $d$-Leray then a rainbow set $\not\in\mathcal{C}$
      br
      span.fragment $\Rightarrow$ $x \in \mathrm{conv}($a rainbow set$)$.
  section
    h3 How to prove $\mathcal{C}$ is $d$-Leray?
    p.fragment(data-fragment-index="4")
      span.blue Wegner
    table.simple
      tr
        td
          span.fragment(data-fragment-index="1") $d$-representable
          br
          span.fragment(data-fragment-index="2") Bárány
          br
          span.fragment(data-fragment-index="3") geometric
        td.fragment(data-fragment-index="4" style="vertical-align: top") $\subset$
        td
          span.fragment(data-fragment-index="4") $d$-collapsible
          br
          span.fragment(data-fragment-index="2") $\Leftarrow$
          br
          span.fragment(data-fragment-index="5") combinatorial
        td.fragment(data-fragment-index="4" style="vertical-align: top") $\subset$
        td
          | $d$-Leray
          br
          | Kalai–Meshulam
          br
          span.fragment(data-fragment-index="3") topological
  section
    p.blue Elementary $d$-collapse
    p
      span.fragment 1. Pick $\sigma \in \mathcal{C}$ such that $|\sigma|\le d$
      br
      span.fragment 2. If max face $\tau \supseteq \sigma$ is unique then remove $[\sigma, \tau]$
    img.fragment.simple(src="img/collapse.png" height="240px")
    p.fragment
      | $\mathcal{C}$ is 
      span.blue $d$-collapsible 
      | if a chain of elementary $d$-collapses would turn $\mathcal{C}$ into $\{\emptyset\}$
section
  section
    h3 Plan of talk
    p Geometric proof of Drisko
    p Topological toolkit
    p.fragment.grow Applications
  section
    .flex-container.eighty
      .theorem.flex-1(style='margin-right: 0.25rem')
        p Kalai–Meshulam
        p
          | Let $V_1, \dots, V_{d+1} \subset V$. If $\mathcal{C}$ is a 
          span.red $d$-collapsible 
          | simplicial complex on $V$ and no $V_k$ is in $\mathcal{C}$, then a rainbow set is not in $\mathcal{C}$.
      .theorem.flex-1(style='margin-left: 0.25rem')
        p Aharoni–Berger
        p $2n-1$ matchings of size $n$ in a bipartite graph have a rainbow matching of size $n$.
    p.ninety
      span.blue.fragment Proof sketch (Kalai–Meshulam $\implies$ Aharoni–Berger)
      br
      span.fragment
        | $V := E_1 \cup \dots \cup E_{2n-1}$, $\mathcal{C} := \{ E\subset V : \nu(E) < n \}$
        br
        | $\nu(E)$ is the matching number of $E$
      br
      span.fragment Kalai–Meshulam: If $\mathcal{C}$ is $(2n-2)$-collapsible then a rainbow set is not in $\mathcal{C}$
      br
      span.fragment $\Rightarrow$ a rainbow mathching of size $\ge n$.
  section
    h3 Business model
    ol
      li.fragment Pick your favorite graph parameter $\nu$
      li.fragment Prove $\mathcal{C} := \{ E : \nu(E) < n\}$ is $d$-collapsible
      li.fragment Apply Kalai–Meshulam
    p.fragment Rainbow result: Edge sets $E_1, \dots, E_{d+1}$ with $\nu(E_k) \ge n$ have a rainbow set $E$ with $\nu(E) \ge n$.
  section
    figure(style='margin-bottom: 0.25rem')
      img.avatar(src="img/aharoni.png")
      img.avatar(src="img/holzman.png")
      img.avatar(src="img/jiang.png")
    .theorem
      p Aharoni, Holzman, J.
      p Given $r\in\mathbb{N}$, $n\in\mathbb{N}$ and $r$-partite edge sets $E_1, \dots, E_{rn-r+1}$ with $\nu^*(E_i) \ge n$ there is a rainbow set $E$ with $\nu^*(E) \ge n$.
    p.fragment.eighty
      | Here the fractional matching number $\nu^*(E) = \max_f\sum_{e\in E} f(e)$
      br
      | s.t. $f(e)\ge 0$ for $e\in E$ and $\sum_{e\ni v} f(e) \le 1$ for $v\in V$.
  section
    h3 Easter egg
  section
    .flex-container.eighty
      .theorem.flex-1(style="margin-right: 0.25rem")
        p Drisko's theorem 
        p $2n-1$ perfect matchings of size $n$ in a bipartite graph have a rainbow perfect matching.
      .theorem.flex-1(style="margin-left: 0.25rem")
        p Erdős–Ginzburg–Ziv
        p Given $2n-1$ numbers in $\mathbb{Z}/n \mathbb{Z}$, there exist $n$ of them that sum to $0$.
    p.fragment.blue Alon's proof (Drisko $\implies$ Erdős–Ginzburg–Ziv)
    p
      span.fragment For each number $a_i$, let $E_i$ be matching $\{ x \sim x + a_i\}$
      br
      span.fragment Drisko: there is a rainbow matching of size $n$
      br
      span.fragment $1 \sim 1 + a_{i_1}, \dots, n \sim n + a_{i_n}$
      br
      span.fragment Rainbow means $i_1, \dots, i_n$ are different
      br
      span.fragment $\implies 1 + \dots + n = (1 + a_{i_1}) + \dots + (n + a_{i_n})$
section
  section
    h3 An open problem
  section
    .flex-container
      .flex-1(style='margin: 2rem')
        svg(viewBox="-120 -120 240 240")
          line(x1="110" y1="46" x2="110" y2="-46" stroke="#db3236" stroke-width="4")
          line(x1="-46" y1="110" x2="46" y2="110" stroke="#db3236" stroke-width="4")
          line(x1="-110" y1="46" x2="-110" y2="-46" stroke="#db3236" stroke-width="4")
          line(x1="-46" y1="-110" x2="46" y2="-110" stroke="#db3236" stroke-width="4")
          line(x1="110" y1="46" x2="46" y2="110" stroke="#4885ed" stroke-width="4")
          line(x1="-110" y1="-46" x2="-46" y2="-110" stroke="#4885ed" stroke-width="4")
          line(x1="110" y1="-46" x2="46" y2="-110" stroke="#4885ed" stroke-width="4")
          line(x1="-110" y1="46" x2="-46" y2="110" stroke="#4885ed" stroke-width="4")
          line(x1="110" y1="46" x2="-46" y2="110" stroke="#3cba54" stroke-width="4")
          line(x1="-110" y1="46" x2="46" y2="110" stroke="#3cba54" stroke-width="4")
          line(x1="110" y1="-46" x2="-46" y2="-110" stroke="#3cba54" stroke-width="4")
          line(x1="-110" y1="-46" x2="46" y2="-110" stroke="#3cba54" stroke-width="4")
          circle(cx='110' cy='46' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-110' cy='46' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='110' cy='-46' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-110' cy='-46' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='46' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-46' cy='110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='46' cy='-110' r='4' stroke='grey' stroke-width='2' fill='white')
          circle(cx='-46' cy='-110' r='4' stroke='grey' stroke-width='2' fill='white')
      .flex-2
        p.fragment
          span.blue 3 x blue
          | + 
          span.red 3 x red
          | + 
          span.green 1 x green
          br
          | no rainbow matching of size $4$
        p.fragment
          span.blue Conjecture 
          br
          | $2n$ matchings of size $n$ in 
          span.red any graph 
          | have a rainbow matching of size $n$.
    .theorem.fragment
      p Aharoni, Berger, Chudnovsky, Howard, Seymour
      p $3n-2$ matchings of size $n$ have a rainbow matching of size $n$.
if date
  include ../../layouts/contact.pug